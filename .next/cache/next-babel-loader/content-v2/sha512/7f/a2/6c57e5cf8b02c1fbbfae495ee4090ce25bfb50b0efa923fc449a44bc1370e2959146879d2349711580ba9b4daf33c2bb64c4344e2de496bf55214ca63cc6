{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\geri.hristozova\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\n//homepage\nimport { useEffect, useState } from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\nfunction Home(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n} // export async function getServerSideProps(context){ //runs for every request so do not need to be revalidated\n//     const req=context.req;\n//     const res=context.res;\n//     //fetch data from an API\n//     return {\n//         props:{\n//             meetups:MEETUPSL\n//         } \n//     };\n// };\n\n\nexport async function getStaticProps() {\n  //get information from DB\n  //fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://gerihr:1392000Kakva@cluster0.xw43p.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1 //update the page with information, the number shows the seconds \n\n  };\n}\nexport default Home;","map":{"version":3,"sources":["C:/Users/geri.hristozova/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["useEffect","useState","MeetupList","MongoClient","Home","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAEhB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAGD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,eAAeC,cAAf,GAA+B;AAAE;AACxC;AAEA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,0GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAI,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAvB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAGA,SAAO;AACHV,IAAAA,KAAK,EAAC;AACFC,MAAAA,OAAO,EAACA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC3BC,QAAAA,KAAK,EAACD,MAAM,CAACC,KADc;AAE3BC,QAAAA,OAAO,EAACF,MAAM,CAACE,OAFY;AAG3BC,QAAAA,KAAK,EAACH,MAAM,CAACG,KAHc;AAI3BC,QAAAA,EAAE,EAACJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN,KADH;AASHC,IAAAA,UAAU,EAAE,CATT,CASW;;AATX,GAAP;AAWC;AAED,eAAepB,IAAf","sourcesContent":["//homepage\r\nimport { useEffect, useState } from 'react';\r\nimport MeetupList from '../components/meetups/MeetupList'\r\nimport {MongoClient} from 'mongodb';\r\n\r\nfunction Home(props){\r\n\r\n    return <MeetupList meetups={props.meetups}/>\r\n}\r\n\r\n\r\n// export async function getServerSideProps(context){ //runs for every request so do not need to be revalidated\r\n//     const req=context.req;\r\n//     const res=context.res;\r\n\r\n//     //fetch data from an API\r\n//     return {\r\n//         props:{\r\n//             meetups:MEETUPSL\r\n//         } \r\n//     };\r\n// };\r\n\r\n\r\nexport async function getStaticProps(){ //get information from DB\r\n//fetch data from an API\r\n\r\nconst client = await MongoClient.connect('mongodb+srv://gerihr:1392000Kakva@cluster0.xw43p.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\r\nconst db = client.db();\r\n\r\nconst meetupsCollection = db.collection('meetups');\r\nconst meetups =  await meetupsCollection.find().toArray();\r\nclient.close();\r\n\r\n\r\nreturn {\r\n    props:{\r\n        meetups:meetups.map(meetup => ({\r\n            title:meetup.title,\r\n            address:meetup.address,\r\n            image:meetup.image,\r\n            id:meetup._id.toString()\r\n        }))\r\n    },\r\n    revalidate: 1 //update the page with information, the number shows the seconds \r\n    };\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}